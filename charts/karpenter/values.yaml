nameOverride: ''
fullnameOverride: ''
additionalLabels: {}
additionalAnnotations: {}
imagePullPolicy: IfNotPresent
imagePullSecrets: []
service:
  annotations: {}
serviceAccount:
  create: true
  name: ''
  annotations: {}
additionalClusterRoleRules: []
serviceMonitor:
  enabled: false
  additionalLabels: {}
  relabelings: []
  metricRelabelings: []
  endpointConfig: {}
replicas: 2
revisionHistoryLimit: 10
strategy:
  rollingUpdate:
    maxUnavailable: 1
podLabels: {}
podAnnotations: {}
podDisruptionBudget:
  name: karpenter
  maxUnavailable: 1
podSecurityContext:
  runAsNonRoot: false
  fsGroup: 65532
  seccompProfile:
    type: RuntimeDefault
priorityClassName: system-cluster-critical
terminationGracePeriodSeconds: null
hostNetwork: false
schedulerName: default-scheduler
dnsPolicy: ClusterFirst
dnsConfig: {}
initContainers: {}
nodeSelector:
  kubernetes.io/os: linux
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: karpenter.sh/nodepool
              operator: DoesNotExist
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - topologyKey: kubernetes.io/hostname
topologySpreadConstraints:
  - maxSkew: 1
    topologyKey: topology.kubernetes.io/zone
    whenUnsatisfiable: DoNotSchedule
tolerations:
  - key: CriticalAddonsOnly
    operator: Exists
extraVolumes: []
controller:
  containerName: controller
  image:
    repository: ghcr.io/absaoss/karpenter-provider-vsphere
    tag: 0.0.1
  env: []
  envFrom: []
  securityContext:
    appArmorProfile: {}
    seLinuxOptions: {}
    seccompProfile: {}
  resources: {}
  extraVolumeMounts: []
  sidecarContainer: []
  sidecarVolumeMounts: []
  metrics:
    port: 8080
  healthProbe:
    port: 8081
logLevel: info
logOutputPaths:
  - stdout
logErrorOutputPaths:
  - stderr
settings:
  preferencePolicy: Respect
  clusterName: ''
  vmMemoryOverheadPercent: 0.075
